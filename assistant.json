{"state":{"access":true,"terms":{"accepted":true,"version":null},"serverUrl":null,"notebooks":[{"path":"JUYPTER/eigenvaluevector.ipynb","activeChatKey":null,"previousChatKey":null,"chats":{},"notebookState":{"dataframes":[],"selectedCell":null,"selectedText":null,"error":null},"homeScreen":{"chatStarters":{"categories":[{"id":"tutorial","label":"Get started","starters":[{"name":"load-volcano-data","label":"Load volcano data from the Smithsonian Institute","instruction":"Load 'https://gist.githubusercontent.com/mattkram/9684863843254402942dfede27af2cb7/raw/2590dd8185b833aacf247c0595edbb07a025a6d7/Smithsonian_VOTW_Holocene_Volcanoes.csv' in a code block. Use `pd.read_csv` and show the first 10 rows"},{"name":"plot-fibonacci","label":"Plot the first 100 Fibonacci numbers","instruction":"Plot the first 100 fibonacci numbers"},{"name":"mask-emails","label":"Create a function to mask emails","instruction":"Create a function to mask email addresses, show examples"}]},{"id":"dataframes","label":"Working with dataframes","starters":[{"name":"load-a-dataframe","label":"Load a DataFrame","suggestions":[{"label":"Generate a DataFrame with random data","instruction":"Generate code that creates a DataFrame with random data"},{"label":"Load 2023 NCAA Basketball Results","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/bbwieland/ncaa-projections/main/data/KenPomGamesCleaned.csv' and show the first 10 rows"},{"label":"Load 2023 NCAA Basketball Team Ratings","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/bbwieland/ncaa-projections/main/data/TeamRatings.csv' and show the first 10 rows"},{"label":"(FiveThirtyEight) Which US state has the worst drivers?","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/bad-drivers/bad-drivers.csv' and show the first 10 rows."},{"label":"(FiveThirtyEight) Where do people go to check the weather?","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/weather-check/weather-check.csv' and show the first 10 rows."},{"label":"(FiveThirtyEight) District Urbanization Index 2022","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/district-urbanization-index-2022/urbanization-index-2022.csv' and show the first 10 rows."},{"label":"Load the US Wind Turbine Database from usgs.gov","instruction":"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/5078f1cb198694274cb708253b0dc210/raw/f90167d071abe328f7f437f3d68dbd5deb6012c8/uswtdb_v5_3_20230113.csv"},{"label":"Load volcano data from the Smithsonian Institute","instruction":"Load 'https://gist.githubusercontent.com/mattkram/9684863843254402942dfede27af2cb7/raw/2590dd8185b833aacf247c0595edbb07a025a6d7/Smithsonian_VOTW_Holocene_Volcanoes.csv' in a code block. Use `pd.read_csv` and show the first 10 rows"},{"label":"Load US population estimates (2010-2019) from census.gov","instruction":"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/d3880a3a23ca36ccf10f22c1f49adb29/raw/e3dbe9bde709604252f291e1df92ffa7b3bd098f/nst-est2020.csv' and show the first 10 rows."},{"label":"Load US population estimates (2020-2022) from census.gov","instruction":"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/d3880a3a23ca36ccf10f22c1f49adb29/raw/f4602d2b9a17eb0d17355897264f4bad80c5528f/NST-EST2022-POPCHG2020_2022.csv' and show the first 10 rows."},{"label":"Load Pittsburgh bike-share rides data","instruction":"Generate a DataFrame from this url - 'https://gist.github.com/mattkram/16ff06942c100c00466ea5022567bdaa/raw/386da24f5ede4e70496cde1dc9e98c9d02bb177e/bikeshare.csv' and show the first 10 rows."}]},{"name":"describe-dataframe","label":"Describe the data in a DataFrame","doNotDisplay":true,"buttonLabel":"Describe Dataframe","contextSelectionRequired":true,"contextType":"describe-dataframe"},{"name":"graph-dataframe","label":"Generate a graph for data in a DataFrame","doNotDisplay":true,"buttonLabel":"Get Code","contextSelectionRequired":true,"contextType":"graph-dataframe"},{"name":"data-cleaning-suggestions","label":"Suggestions for cleaning data","doNotDisplay":true,"buttonLabel":"Generate cleaning suggestions","contextSelectionRequired":true,"suggestionsType":"data-cleaning-suggestions","generateSuggestions":true},{"name":"dataframe-suggestions","label":"More suggestions...","doNotDisplay":true,"buttonLabel":"Generate suggestions","contextSelectionRequired":true,"suggestionsType":"dataframe-suggestions","generateSuggestions":true}]}]},"selectedChatStarter":null},"suggestionState":{"dataframe":null,"error":null,"loading":false,"suggestions":null}},{"path":"JUYPTER/TISE_computational.ipynb","activeChatKey":null,"previousChatKey":null,"chats":{},"notebookState":{"dataframes":[],"selectedCell":null,"selectedText":{"text":"","cell":{"id":"cc8d30a8-9640-49e8-ad75-e0d7549e87cc","source":""}},"error":{"precedingCells":[{"id":"8c07c38c-1142-4cf7-a3d6-e15bd55f07ce","source":"..."},{"id":"f0a5b6b4-651c-4fe9-93c5-8b5f12f5f270","source":"..."},{"id":"4cfe2f2e-3707-4115-a879-ce7e482c4e23","source":"..."},{"id":"37dbf93a-8668-4e81-82ba-bed470e48ecd","source":"    def Numerov_left(y_left, h, E, V_x):\n        k2 = k_squared(E, V_x)\n        y = np.zeros(n + 1)\n        y[0] = y_left\n        y[1] = y_left + 1e-10\n        for i in range(1, n):\n            y[i + 1] = (y[i] * (2 + 10 / 12 * h ** 2 * k2[i]) - y[i - 1] * (1 - h ** 2 / 12 * k2[i - 1])) / (1 - h ** 2 / 12 * k2[i + 1])\n        return y\n\n    def Numerov_right(y_right, h, E, V_x):\n        k2 = k_squared(E, V_x)\n        y = np.zeros(n + 1)\n        y[-1] = y_right\n        y[-2] = y_right + 1e-10\n        for i in range(1, n):\n ..."},{"id":"6dcb27a0-4339-4aad-a0ed-468df25ceb12","source":"    # Find turning points\n    a = 0\n    b = 15 / alpha\n    tol = 1e-15\n    max_iter = 1000\n\n    def f(x, E):  # Function for turning points\n        return E - V(x)\n\n    def bisection(f, a, b, E, tol, max_iter):\n        if f(a, E) * f(b, E) > 0:\n            raise ValueError('Function has same signs at both endpoints of the interval.')\n        for _ in range(max_iter):\n            c = (a + b) / 2\n            fc = f(c, E)\n            if abs(fc) < tol:\n                return c\n            elif f(a, E) * fc < 0:\n                b = c\n            else:\n                a = c\n        return (a + b) / 2\n\n    left_root = -bisection(f, a, b, E, tol, max_iter)\n    right_root = bisection(f, a, b, E, tol, max_iter)"},{"id":"ba8262ec-2d4c-4eb5-ba3b-4d30d81a7fb2","source":"    # Shooting method setup\n    midpoint = (right_root + left_root) / 2\n    width = (right_root - left_root) / 2\n    x_far_left = midpoint - 10 * width\n    x_far_right = midpoint + 10 * width\n\n    n = 20000\n    h = (x_far_right - x_far_left) / n\n    x = np.linspace(x_far_left, x_far_right, n + 1)\n\n    V_x = V(x)\n\n    Left_points = Numerov_left(0, h, E, V_x)\n    Right_points = Numerov_right(0, h, E, V_x)\n\n    n_turning = int((right_root - x_far_left) / h)\n    return ((Left_points[n_turning + 1] - Left_points[n_turning - 1]) / (2 * h * Left_points[n_turning]) - \n            (Right_points[n_turning + 1] - Right_points[n_turning - 1]) / (2 * h * Right_points[n_turning]))"},{"id":"28bbcc6b-f545-4c6a-9b7a-e0fc19421c0c","source":"# Finding eigenvalues\nE_min, E_max = -2.99, 2.99\nnum_intervals = int((E_max - E_min) / 0.01)\nE_values = np.linspace(E_min, E_max, num_intervals + 2)\n\nroots = []\nfor i in range(len(E_values) - 1):\n    a, b = E_values[i], E_values[i + 1]\n    if f_E(a) * f_E(b) < 0:  # Sign change indicates a root\n        try:\n            sol = root_scalar(f_E, bracket=[a, b], method='brentq')\n            if sol.converged:\n                roots.append(sol.root)\n        except ValueError:\n            pass\n\n# Remove duplicates and display results\nunique_roots = np.unique(np.round(roots, decimals=15))"}],"cell":{"id":"73589937-5927-4b35-a7c0-89379cc9cf89","source":"print(\"First eigenvalues found:\")\nfor i, root in enumerate(unique_roots[:6]):  # Show only the first 6\n    print(f\"Eigenvalue {i + 1}: {root:.6f}\")\n\n# Plot the potential and eigenvalues\nx = np.linspace(-10, 10, 1000)\nplt.plot(x, V(x), label=\"Potential V(x)\")\nfor i, root in enumerate(unique_roots[:6]):\n    plt.axhline(root, linestyle='--', label=f\"Eigenvalue {i + 1}: {root:.2f}\")\nplt.title(\"Potential and First 6 Eigenvalues\")\nplt.xlabel(\"x\")\nplt.ylabel(\"Energy\")\nplt.legend()\nplt.grid()\nplt.show()\n\n# Plot f(E) to visualize roots\nplt.plot(E_values, [f_E(E) for E in E_values])\nplt.axhline(0, color='red', linestyle='--', label=\"f(E) = 0\")\nplt.title(\"Mismatch Function f(E) vs Energy\")\nplt.xlabel(\"Energy (E)\")\nplt.ylabel(\"f(E)\")\nplt.legend()\nplt.grid()\nplt.show()"},"errorText":"KernelReplyNotOK: undefined undefined"}},"homeScreen":{"chatStarters":{"categories":[{"id":"tutorial","label":"Get started","starters":[{"name":"load-volcano-data","label":"Load volcano data from the Smithsonian Institute","instruction":"Load 'https://gist.githubusercontent.com/mattkram/9684863843254402942dfede27af2cb7/raw/2590dd8185b833aacf247c0595edbb07a025a6d7/Smithsonian_VOTW_Holocene_Volcanoes.csv' in a code block. Use `pd.read_csv` and show the first 10 rows"},{"name":"plot-fibonacci","label":"Plot the first 100 Fibonacci numbers","instruction":"Plot the first 100 fibonacci numbers"},{"name":"mask-emails","label":"Create a function to mask emails","instruction":"Create a function to mask email addresses, show examples"}]},{"id":"dataframes","label":"Working with dataframes","starters":[{"name":"load-a-dataframe","label":"Load a DataFrame","suggestions":[{"label":"Generate a DataFrame with random data","instruction":"Generate code that creates a DataFrame with random data"},{"label":"Load 2023 NCAA Basketball Results","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/bbwieland/ncaa-projections/main/data/KenPomGamesCleaned.csv' and show the first 10 rows"},{"label":"Load 2023 NCAA Basketball Team Ratings","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/bbwieland/ncaa-projections/main/data/TeamRatings.csv' and show the first 10 rows"},{"label":"(FiveThirtyEight) Which US state has the worst drivers?","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/bad-drivers/bad-drivers.csv' and show the first 10 rows."},{"label":"(FiveThirtyEight) Where do people go to check the weather?","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/weather-check/weather-check.csv' and show the first 10 rows."},{"label":"(FiveThirtyEight) District Urbanization Index 2022","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/district-urbanization-index-2022/urbanization-index-2022.csv' and show the first 10 rows."},{"label":"Load the US Wind Turbine Database from usgs.gov","instruction":"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/5078f1cb198694274cb708253b0dc210/raw/f90167d071abe328f7f437f3d68dbd5deb6012c8/uswtdb_v5_3_20230113.csv"},{"label":"Load volcano data from the Smithsonian Institute","instruction":"Load 'https://gist.githubusercontent.com/mattkram/9684863843254402942dfede27af2cb7/raw/2590dd8185b833aacf247c0595edbb07a025a6d7/Smithsonian_VOTW_Holocene_Volcanoes.csv' in a code block. Use `pd.read_csv` and show the first 10 rows"},{"label":"Load US population estimates (2010-2019) from census.gov","instruction":"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/d3880a3a23ca36ccf10f22c1f49adb29/raw/e3dbe9bde709604252f291e1df92ffa7b3bd098f/nst-est2020.csv' and show the first 10 rows."},{"label":"Load US population estimates (2020-2022) from census.gov","instruction":"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/d3880a3a23ca36ccf10f22c1f49adb29/raw/f4602d2b9a17eb0d17355897264f4bad80c5528f/NST-EST2022-POPCHG2020_2022.csv' and show the first 10 rows."},{"label":"Load Pittsburgh bike-share rides data","instruction":"Generate a DataFrame from this url - 'https://gist.github.com/mattkram/16ff06942c100c00466ea5022567bdaa/raw/386da24f5ede4e70496cde1dc9e98c9d02bb177e/bikeshare.csv' and show the first 10 rows."}]},{"name":"describe-dataframe","label":"Describe the data in a DataFrame","doNotDisplay":true,"buttonLabel":"Describe Dataframe","contextSelectionRequired":true,"contextType":"describe-dataframe"},{"name":"graph-dataframe","label":"Generate a graph for data in a DataFrame","doNotDisplay":true,"buttonLabel":"Get Code","contextSelectionRequired":true,"contextType":"graph-dataframe"},{"name":"data-cleaning-suggestions","label":"Suggestions for cleaning data","doNotDisplay":true,"buttonLabel":"Generate cleaning suggestions","contextSelectionRequired":true,"suggestionsType":"data-cleaning-suggestions","generateSuggestions":true},{"name":"dataframe-suggestions","label":"More suggestions...","doNotDisplay":true,"buttonLabel":"Generate suggestions","contextSelectionRequired":true,"suggestionsType":"dataframe-suggestions","generateSuggestions":true}]}]},"selectedChatStarter":null},"suggestionState":{"loading":false,"suggestions":null,"dataframe":null,"error":null}}],"path":"JUYPTER/TISE_computational.ipynb","settings":{"enableDataCollection":false,"open":false,"addCodeToNotebook":null},"user":"ASUS","account":{"user":{"id":"6178caaf-d04d-4df2-bf48-d60416810c5b","email":"22003552@siswa.um.edu.my","first_name":"MAN HONG","last_name":"TAN","country":null,"state":null,"promotional_content":null,"company":null,"company_size":null,"position":null,"industry":null,"username":null,"created_at":"2024-12-10T12:40:24.467001+00:00","updated_at":null,"partner_id":null,"partner_customer_id":null,"external_id":null,"first_home_visit":true},"profile":{"is_confirmed":true,"is_disabled":false,"is_consented":true},"subscriptions":[],"metadata":{"is_starter_tier":false,"is_pro_tier":false}},"menuOpen":false,"attachContextOpen":false,"summarizedFiles":{},"hidePopups":false},"version":11}